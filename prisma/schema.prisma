// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User { 
  id         Int   @id @default(autoincrement())
  fistName   String
  middleName String
  lastName   String
  email      String    @unique
  // role       Role      @default(USER)
  // booking   Booking[]
  phoneNumber String
  hash        String
  hashedRt    String?
  
  @@map("Users")

}
 

model BusRoute {
  id             Int       @id @default(autoincrement())
  departure      String
  destination    String
  price          Float
  seats          Int
  bookings       Booking[]
  departureTime  DateTime
  departureplace String
  isAvalaible    Boolean
  passengers     Int       @default(0)
}

model Booking {
  id         Int      @id @default(autoincrement())
  userId     Int
  busRouteId Int
  seatNumber Int
  status     String
  createdAt  DateTime @default(now())

  //user     User     @relation(fields: [userId], references: [id])
  busRoute BusRoute @relation(fields: [busRouteId], references: [id])

  Payment Payment[]
}

model Payment {
  id        Int      @id @default(autoincrement())
  bookingId Int
  amount    Float
  status    String
  createdAt DateTime @default(now())
  booking   Booking  @relation(fields: [bookingId], references: [id])
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}
